<?xml version="1.0" encoding="UTF-8"?><!-- edited with XMLSPY v2004 rel. 4 U (http://www.xmlspy.com) by Mastek (Syntegra) --><!-- Change History: 	Author				Date				Change					V0.3 Preshit Vartak		2007-07-19			Addition of sealing domain related data-types in Spine web-service requests					V0.4 Joseph Waller	2007-07-31			Corrected resourceType ID to be an xs:string rather than II type. Also changed II type to allow root only versions					V0.5 Preshit Vartak	    2007-11-02			Eased restrictions on the type element of the resourceType by removing the enumerated values and now allowed it to have other values as well.																					Updated enumeration value 'UserId' to 'User Id'					V0.6 Joseph Waller	    2008-11-12			updated enumeration of permision type to include	<xs:enumeration value="Ask"/> instead of <xs:enumeration value="Clear"/>					V0.7 Richard Robinson	    2014-10-23		Extracted out separate naspCommonTypes006.xsd schemas for Get, Set and Has. updated enumeration of permision type to include	<xs:enumeration value="Clear"/> instead of <xs:enumeration value="Ask"/> to allign with EIS--><xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://national.carerecords.nhs.uk/schema/crs/" targetNamespace="http://national.carerecords.nhs.uk/schema/crs/" elementFormDefault="qualified" attributeFormDefault="unqualified">	<!-- Following are the datatypes added for sealing interactions-->	<!-- 'functionType' datatype added for sealing interactions-->	<xs:complexType name="functionType">		<xs:sequence>			<xs:element name="context" type="contextType"/>			<xs:element name="code" type="codeType"/>		</xs:sequence>	</xs:complexType>	<!-- 'contextType' datatype added for sealing interactions-->	<xs:simpleType name="contextType">		<xs:restriction base="xs:string">			<xs:enumeration value="Consent"/>			<xs:enumeration value="Sealing"/>		</xs:restriction>	</xs:simpleType>	<!-- 'codeType' datatype added for sealing interactions-->	<xs:simpleType name="codeType">		<xs:restriction base="xs:string">			<xs:enumeration value="View"/>			<xs:enumeration value="Store"/>		</xs:restriction>	</xs:simpleType>	<!-- 'resourceType' datatype added for sealing interactions-->	<xs:complexType name="resourceType">		<xs:sequence>			<xs:element name="type" type="xs:string"/>			<xs:element name="Id" type="xs:string"/>		</xs:sequence>	</xs:complexType>	<!-- 'accessorType' datatype added for sealing interactions-->	<xs:complexType name="accessorType">		<xs:sequence>			<xs:element name="type">				<xs:simpleType>					<xs:restriction base="xs:string">						<xs:enumeration value="Everyone"/>						<xs:enumeration value="User Id"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element name="accessorId">				<xs:complexType>					<xs:choice>						<xs:element name="id" type="II"/>						<xs:element name="name" type="xs:string"/>					</xs:choice>				</xs:complexType>			</xs:element>		</xs:sequence>	</xs:complexType>	<!-- 'II' datatype added for sealing interactions-->	<xs:complexType name="II">		<xs:annotation>			<xs:documentation>A complex type for coded values. The value of this element may contain a display text.</xs:documentation>		</xs:annotation>		<xs:simpleContent>			<xs:extension base="xs:string">				<xs:attribute name="root" type="xs:string" use="required">					<xs:annotation>						<xs:documentation>A unique identifier that guarantees the global uniqueness of theinstance identifier. The root alone may be the entire instanceidentifier.</xs:documentation>					</xs:annotation>				</xs:attribute>				<xs:attribute name="extension" type="xs:string" use="optional">					<xs:annotation>						<xs:documentation>A character string as a unique identifier within the scope of theidentifier root.</xs:documentation>					</xs:annotation>				</xs:attribute>			</xs:extension>		</xs:simpleContent>	</xs:complexType>	<xs:simpleType name="permissionType">		<xs:restriction base="xs:string">			<xs:enumeration value="Yes"/>			<xs:enumeration value="No"/>			<xs:enumeration value="Clear"/>			<!--Note that GetResourcePersmissions response will never contain an ask as, when set to the default value (for ask) the Access Control Assertion is ommitted from the response-->		</xs:restriction>	</xs:simpleType>	<!--		<xs:complexType name="responseBlockType">		<xs:sequence>			<xs:element name="Result">				<xs:simpleType>					<xs:restriction base="xs:string">						<xs:enumeration value="Success"/>						<xs:enumeration value="Failure"/>					</xs:restriction>				</xs:simpleType>			</xs:element>			<xs:element ref="errorList" minOccurs="0"/>		</xs:sequence>	</xs:complexType>	<xs:complexType name="sealingErrorListType">		<xs:sequence>			<xs:element name="error" type="sealingErrorType" maxOccurs="unbounded"/>		</xs:sequence>	</xs:complexType>	<xs:complexType name="sealingErrorType">		<xs:sequence>			<xs:element ref="codeContext" minOccurs="0"/>			<xs:element ref="errorCode" minOccurs="1"/>			<xs:element ref="severity" minOccurs="0"/>			<xs:element ref="location" minOccurs="0"/>			<xs:element ref="description" minOccurs="1"/>		</xs:sequence>	</xs:complexType>	<xs:element name="errorList" type="sealingErrorListType"/>	<xs:element name="codeContext" type="xs:string"/>	<xs:element name="errorCode" type="xs:string"/>	<xs:element name="severity" type="xs:string"/>	<xs:element name="location" type="xs:string"/>	<xs:element name="description" type="xs:string"/>	--></xs:schema>